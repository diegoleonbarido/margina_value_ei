id_set_dist <- id_set %>% distinct
if (nrow(id_set) == nrow(id_set_dist)) {
TRUE
} else {
non_unique_ids <- id_set %>%
filter(id_set %>% duplicated()) %>%
distinct()
suppressMessages(
inner_join(non_unique_ids, x) %>% arrange(...)
)
}
}
## SET WORKING DIRECTORY
getwd()
setwd(file.path('G:','marginal_value_ei'))
## INSPECT DATA
aDataBilling <- read_csv(file.path('DATA','treatment_control_endline.csv'))
aDataUniqueHH <- select(aDataBilling, 'num_medidor', 'Current_Group') %>% unique()
## START ANALYSIS ON BILLING DATA
treatmentGroups <- unique(aDataBilling$Current_Group) %>%
setdiff('Control')
luzeroGroup <- c('treatment_luzero_NO_SMS', 'treatment_luzero_SMS')
smsGroup <- c('treatment_SMS', 'treatment_luzero_SMS')
aDataBilling <- aDataBilling %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
smsOnly =
ifelse(Current_Group %in% 'treatment_SMS' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_NO_SMS' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0))
# use some assertion commands to make sure these things are properly defined...
assertthat::are_equal(aDataBilling$luzeroTreatment * aDataBilling$smsTreatment, aDataBilling$luzeroSMSTreatment)
assertthat::are_equal(aDataBilling$luzeroTreatment * (1-aDataBilling$smsTreatment), aDataBilling$luzeroNoSMSTreatment)
# select some data to make this check easier
test <- aDataBilling %>% select(encuesta_id, timeline, Current_Group, anyTreatment, luzeroTreatment, smsTreatment, luzeroSMSTreatment, luzeroNoSMSTreatment, paperTreatment) %>%
unique()
test %>% unique_id(encuesta_id, timeline, Current_Group) # these are unique values -- good for analysis now.
# ok now run some regressions with the billing data:
aDataBilling <- aDataBilling %>% unique()
# run a regression on kwh used
model1 <- felm(csmo_energia ~
luzeroTreatment + smsTreatment + paperTreatment +
jan_prop + feb_prop + mar_prop + apr_prop +
may_prop + jun_prop + jul_prop + aug_prop +
sep_prop + oct_prop + nov_prop + dec_prop |
encuesta_id | 0 | 0, data = aDataBilling)
model2 <- felm(csmo_energia ~
luzeroTreatment + smsTreatment + paperTreatment +
jan_prop + feb_prop + mar_prop + apr_prop +
may_prop + jun_prop + jul_prop + aug_prop +
sep_prop + oct_prop + nov_prop + dec_prop |
encuesta_id | 0 | encuesta_id, data = aDataBilling)
modelAllTreatment <- felm(csmo_energia ~
luzeroSMSTreatment + luzeroNoSMSTreatment + smsOnly + paperTreatment +
jan_prop + feb_prop + mar_prop + apr_prop +
may_prop + jun_prop + jul_prop + aug_prop +
sep_prop + oct_prop + nov_prop + dec_prop |
encuesta_id | 0 | encuesta_id, data = aDataBilling)
## LUZERO ANALYSIS -- DATA PREP
## DEREK WOLFSON & DIEGO PONCE DE LEON BARIDO
## LAST MODIFIED: JAN-16-2019
library(readr)
library(dplyr)
library(devtools)
library(lubridate)
library(lfe)
# load functions
unique_id <- function(x, ...) {
id_set <- x %>% select(...)
id_set_dist <- id_set %>% distinct
if (nrow(id_set) == nrow(id_set_dist)) {
TRUE
} else {
non_unique_ids <- id_set %>%
filter(id_set %>% duplicated()) %>%
distinct()
suppressMessages(
inner_join(non_unique_ids, x) %>% arrange(...)
)
}
}
## SET WORKING DIRECTORY
getwd()
setwd(file.path('G:','marginal_value_ei'))
## INSPECT DATA
aDataBilling <- read_csv(file.path('DATA','treatment_control_endline.csv'))
aDataUniqueHH <- select(aDataBilling, 'num_medidor', 'Current_Group') %>% unique()
## START ANALYSIS ON BILLING DATA
treatmentGroups <- unique(aDataBilling$Current_Group) %>%
setdiff('Control')
luzeroGroup <- c('treatment_luzero_NO_SMS', 'treatment_luzero_SMS')
smsGroup <- c('treatment_SMS', 'treatment_luzero_SMS')
aDataBilling <- aDataBilling %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
smsOnly =
ifelse(Current_Group %in% 'treatment_SMS' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_NO_SMS' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & timeline == 'Ongoing Experiment' & !is.na(timeline), 1, 0))
# use some assertion commands to make sure these things are properly defined...
assertthat::are_equal(aDataBilling$luzeroTreatment * aDataBilling$smsTreatment, aDataBilling$luzeroSMSTreatment)
assertthat::are_equal(aDataBilling$luzeroTreatment * (1-aDataBilling$smsTreatment), aDataBilling$luzeroNoSMSTreatment)
## SET WORKING DIRECTORY
getwd()
##########################
## SECTION 0 -- PREAMBLE
##########################
## INSTALL
getwd()
setwd(file.path('G:','marginal_value_ei'))
##########################
## SECTION 0 -- PREAMBLE
##########################
## INSTALL
install.packages('pacman')
##########################
## SECTION 0 -- PREAMBLE
##########################
## INSTALL
require('pacman')
pacman('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
##########################
## SECTION 0 -- PREAMBLE
##########################
## INSTALL
require('pacman')
pacman('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
pacman::p_load('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
pacman::p_load('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
##########################
## SECTION 0 -- PREAMBLE
##########################
## INSTALL
require('pacman')
pacman::p_load('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
## SET WORKING DIRECTORY
getwd()
setwd(file.path('G:','marginal_value_ei'))
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
# keep only treatment information
treatmentGroups <- unique(surveyData$Current_Group) %>%
setdiff('Control')
luzeroGroup <- c('treatment_luzero_no_SMS', 'treatment_luzero_SMS')
smsGroup <- c('treatment_SMS', 'treatment_luzero_SMS')
treatmentGroups
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & survey_time == 'endline', 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & survey_time == 'endline', 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_no_SMS' & survey_time == 'endline', 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & survey_time == 'endline', 1, 0))
# create treatment indicators only for endline time period
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & survey_time == 'endline', 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & survey_time == 'endline', 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_no_SMS' & survey_time == 'endline', 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & survey_time == 'endline', 1, 0))
table(surveyData$Current_Group)
table(surveyData$Assigned_Group
)
# keep only treatment information
treatmentGroups <- unique(surveyData$Current_Group) %>%
setdiff('Control')
treatmentGroups
table(surveyData$Assigned_Group)
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group),
Assigned_Group = as.factor(Assigned_Group))
table(surveyData$Current_Group)
table(surveyData$Assigned_Group)
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
table(surveyData$Current_Group)
View(surveyData$Current_Group)
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group))
suveyData$Current_Group
('Data/baseline_endline_surveys.csv')
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group))
surveyData$Current_Group
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
levels(surveyData$Current_Group)
View(surveyData$Current_Group)
###########################################
# LUZERO DATA BUILD TAKE II
# AUTHOR: DEREK WOLFSON
# CREATION DATE: 09/05/2019
###########################################
###########################################
## SECTION 0
##  PREAMBLE
###########################################
## INSTALL
require('pacman')
pacman::p_load('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
## SET WORKING DIRECTORY
getwd()
setwd(file.path('G:','marginal_value_ei'))
###########################################
## END SECTION 0
###########################################
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
View(surveyData)
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
typeof(surveyData$Current_Group)
typeof(surveyData$Assigned_Group)
###########################################
# LUZERO DATA BUILD TAKE II
# AUTHOR: DEREK WOLFSON
# CREATION DATE: 09/05/2019
###########################################
###########################################
## SECTION 0
##  PREAMBLE
###########################################
## INSTALL
require('pacman')
pacman::p_load('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
## SET WORKING DIRECTORY
getwd()
setwd(file.path('G:','marginal_value_ei'))
###########################################
## END SECTION 0
###########################################
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
typeof(surveyData$Assigned_Group)
typeof(surveyData$Current_Group)
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
table(surveyData$Current_Group)
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
surveyData$Assigned_Group
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Assigned_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
surveyData$Assigned_Group
# create treatment indicators only for endline time period
treatmentGroups <- unique(surveyData$Current_Group) %>%
setdiff('Control')
luzeroGroup <- c('treatment_luzero_no_SMS', 'treatment_luzero_SMS')
smsGroup <- c('treatment_SMS', 'treatment_luzero_SMS')
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & survey_time == 'endline', 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & survey_time == 'endline', 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_no_SMS' & survey_time == 'endline', 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & survey_time == 'endline', 1, 0))
table(surveyData$anyTreatment)
table(surveyData$luzeroTreatment)
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & survey_time == 'endline', 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & survey_time == 'endline', 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_no_SMS' & survey_time == 'endline', 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & survey_time == 'endline', 1, 0))
table(surveyData$luzeroTreatment)
table(surveyData$Current_Group)
unique(surveyData$Current_Group)
# create treatment indicators only for endline time period
treatmentGroups <- unique(surveyData$Current_Group) %>%
setdiff('Control')
luzeroGroup <- c('treatment_luzero_NO_SMS', 'treatment_luzero_SMS')
smsGroup <- c('treatment_SMS', 'treatment_luzero_SMS')
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & survey_time == 'endline', 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & survey_time == 'endline', 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_no_SMS' & survey_time == 'endline', 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & survey_time == 'endline', 1, 0))
surveyData$luzeroNoSMSTreatment
table(surveyData$anyTreatment)
table(surveyData$luzeroTreatment
)
surveyData$CUrrent_Group %in% luzeroGroup
surveyData$Current_Group %in% luzeroGroup
surveyData$Current_Group %in% luzeroGroup & surveyData$survey_time == 'endline'
surveyData$Current_Group %in% luzeroGroup & surveyData$survey_time == 'endline'
surveyData$survey_time
levels(surveyData$survey_time)
unique(surveyData$survey_time)
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0))
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0)) %>%
mutate(luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0))
table(surveyData$luzeroTreatment)
View(surveyData)
k <- filter(surveyData, survey_time == 'endline')
View(k)
table(k$Assigned_Group)
table(k$Current_Group)
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv') %>% filter(survey_time = 'endline')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv') %>% filter(survey_time == 'endline')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Assigned_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
surveyData$Assigned_Group
surveyData$Current_Group
surveyData <- surveyData %>%
mutate(anyTreatment =
ifelse(Current_Group %in% treatmentGroups & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
luzeroTreatment =
ifelse(Current_Group %in% luzeroGroup & survey_time == 'endline', 1, 0),
smsTreatment =
ifelse(Current_Group %in% smsGroup & survey_time == 'endline', 1, 0),
luzeroSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_SMS' & survey_time == 'endline', 1, 0),
luzeroNoSMSTreatment =
ifelse(Current_Group %in% 'treatment_luzero_no_SMS' & survey_time == 'endline', 1, 0),
paperTreatment =
ifelse(Current_Group %in% 'treatment_PAPER' & survey_time == 'endline', 1, 0))
surveyData$anyTreatment
treatmentGroups <- unique(surveyData$Current_Group) %>%
setdiff('Control')
levels(treatmentGroups)
###########################################
# LUZERO DATA BUILD TAKE II
# AUTHOR: DEREK WOLFSON
# CREATION DATE: 09/05/2019
###########################################
###########################################
## SECTION 0
##  PREAMBLE
###########################################
## INSTALL
require('pacman')
pacman::p_load('readr', 'dplyr', 'devtools', 'lubridate', 'haven')
## SET WORKING DIRECTORY
getwd()
setwd(file.path('G:','marginal_value_ei'))
###########################################
## END SECTION 0
###########################################
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv') %>% filter(survey_time == 'endline')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Assigned_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
# create treatment indicators only for endline time period
treatmentGroups <- unique(surveyData$Current_Group)
treatmentGroups
surveyData$Current_Group
###########################################
## SECTION 1
##  CREATE TREATMENT INDICATORS
###########################################
# load survey data
surveyData <- read_csv('Data/baseline_endline_surveys.csv')
# clean the grouping variables
surveyData <- surveyData %>%
mutate(Current_Group = ifelse(Current_Group %in% c('No', 'NO'), 'Control', Current_Group)) %>%
mutate(Current_Group = as.factor(Current_Group))
surveyData <- surveyData %>%
mutate(Assigned_Group = ifelse(Assigned_Group %in% c('No', 'NO'), 'Control', Assigned_Group)) %>%
mutate(Assigned_Group = as.factor(Assigned_Group))
# create treatment indicators only for endline time period
treatmentGroups <- unique(surveyData$Current_Group) %>%
setdiff('Control')
luzeroGroup <- c('treatment_luzero_NO_SMS', 'treatment_luzero_SMS')
smsGroup <- c('treatment_SMS', 'treatment_luzero_SMS')
